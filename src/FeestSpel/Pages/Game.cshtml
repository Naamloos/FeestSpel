@page
@using Microsoft.Extensions.Primitives
@inject GameManager manager
@model FeestSpel.Pages.GameModel
@{
    ViewData["Title"] = manager.DependencyTest();

    var roomcode = HttpContext.Session.GetStringValue("roomcode");

    if (manager.GetRoomByCode(roomcode) is null)
    {
        HttpContext.Response.Redirect("/");
    }
    else
    {
        bool isHost = manager.CheckHost(roomcode, HttpContext.Session.GetStringValue("hostkey"));
        string hostText = "";


        <p class="hugetext" id="mission">
            .
        </p>

        @if (isHost)
        {
            hostText = "[ HOST ]";
        }

        //To-Do: make icon clickable so it copies roomcode to clipboard
        <p id="roomcode">Room Code: @roomcode &#128190; @hostText</p>

        @if (isHost)
        {
            <script>
                document.getElementById('container').addEventListener("click", function () {
                    var req = new XMLHttpRequest();
                    req.open("POST", "/api/update");
                    req.send();
                }, false);
                document.getElementById('roomcode').addEventListener("click", function (ev) {
                    ev.stopPropagation(); //stops element from being clickable, thanks to https://stackoverflow.com/a/33657471
                }, false);
            </script>
        }



        <script>
            // taken from https://css-tricks.com/snippets/javascript/random-hex-color/
            const setBg = () => {
                const randomColor = Math.floor(Math.random() * 16777215).toString(16);
                document.body.style.backgroundColor = "#" + randomColor;
            }

            var mission = document.getElementById("mission");

            var wspath = window.location.hostname + ":" + window.location.port + "/api/ws";

            if (location.protocol === 'https:') {
                // page is secure
                wspath = "wss://" + wspath;
            } else {
                wspath = "ws://" + wspath;
            }

            var ws = new WebSocket(wspath);

            ws.onmessage = function (event) {
                var response = JSON.parse(event.data);

                switch (response.Action) {
                    case "redirect":
                        window.location.href = response.Context;
                        break;

                    case "text":
                        mission.innerHTML = response.Context;
                        setBg();
                        break;

                    default:
                        break;
                }

                ws.send("OK");
            }
        </script>
    }
}