@page
@model FeestSpel.Pages.HostModel
@{
    ViewData["Title"] = "Create new";
}
@using Entities;
@inject GameManager manager;

@if (HttpContext.Request.Method == "POST")
{
    // do validity checks
    var form = HttpContext.Request.Form;
    var packName = form.GetStringValue("pack");
    var missionCount = form.GetStringValue("amount");
    var difficulty = form.GetStringValue("difficulty");
    var players = form.GetStringValue("players").Split(',').ToList();

    var pack = manager.GetPacks().FirstOrDefault(x => x.Title == packName);
    var diffs = Enum.GetNames(typeof(Difficulty));
    var diff = diffs.FirstOrDefault(x => x.ToLower() == difficulty.ToLower());
    var code = "";
    var missionCountIsValid = int.TryParse(missionCount, out int missionCountInt);

    int i = 0;

    for (i = 0; i < 5; i++)
    {
        code = Room.GenerateCode();
        if (manager.GetRoomByCode(code) is null)
            break;
    }

    if (i > 3)
    {
        <h1>Room code aanmaken ging fout. Probeer het opnieuw.</h1>
    }
    else if (pack == null)
    {
        <h1>Je geselecteerde pack bestaat niet!</h1>
    }
    else if (!missionCountIsValid)
    {
        <h1>Je mission count is niet valid!</h1>
    }
    else if (pack.GetMinimumPlayers() > players.Count())
    {
        <h1>Je hebt niet genoeg spelers voor deze pack! Minimum voor deze pack is @pack.GetMinimumPlayers()!</h1>
    }
    else if (string.IsNullOrEmpty(diff))
    {
        <h1>Je geselecteerde difficulty bestaat niet!</h1>
    }
    else if (manager.GetAmountOfRoomsOnIp(HttpContext.Connection.RemoteIpAddress) > 3)
    {
        <h1>Er zijn al te veel geopende kamers op jouw IP!</h1>
    }
    else
    {
        var settings = new GameSettings()
        {
            Players = players,
            MissionCount = missionCountInt,
            Difficulty = (Difficulty)Enum.Parse(typeof(Difficulty), diff)
        };

        var key = Room.GenerateCode();
        var room = new Room(code, key, settings, pack, HttpContext.Connection.RemoteIpAddress);
        HttpContext.Session.SetStringValue("roomcode", code);
        HttpContext.Session.SetStringValue("hostkey", key);

        manager.RegisterRoom(room);

        HttpContext.Response.Redirect("game");
    }
}
else
{
    <h1>Nieuw Spel Starten</h1>
    <div id="hostform">
        <form method="post">
            <!-- Ja, I know. Dit is de lelijkste form die je ooit gezien hebt. Thanks. Maar front-facing deel is wel oke ;) -->
            <label><b>Spelers (split met comma's)</b></label>
            <input name="players" value="" />
            <br />
            <br />
            <label><b>Moeilijkheid</b></label>
            <div id="radiocontainer">
                <div id="radios">
                    <input type="radio" name="difficulty" value="Sober" />
                    <label>Nuchter (Alleen slokjes)</label>
                    <br />
                    <input type="radio" name="difficulty" value="Normal" checked="checked" />
                    <label>Normaal (Willekeurig)</label>
                    <br />
                    <input type="radio" name="difficulty" value="Drunk" />
                    <label>Dronken (Glas moet altijd leeg)</label>
                    <br /><br />
                    <label><b>Pakket</b></label>
                    <select name="pack">
                        @foreach (var pack in manager.GetPacks())
                        {
                            <option value="@pack.Title">@pack.Title</option>
                        }
                    </select>
                    <br />
                    <label><b>Opdrachten</b></label>
                    <input type="number" value="15" name="amount" />
                </div>
            </div>
            <br />
            <input type="submit" class="fancybtn" value="Start" />
        </form>
    </div>
}

<p class="paddedtext">
    <a href="~/" class="backlink">Terug naar home</a>
</p>